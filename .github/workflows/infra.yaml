name: Infra with Terraform + Ansible

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      TF_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      TF_VAR_client_id: ${{ secrets.AZURE_CLIENT_ID }}

    steps:
    - uses: actions/checkout@v4

    - name: azure login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: setup terraform
      uses: hashicorp/setup-terraform@v3

    - name: extract public key
      run: |
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > id_rsa
        chmod 600 id_rsa
        ssh-keygen -y -f id_rsa > id_rsa.pub
        echo "TF_VAR_ssh_pub_key=$(cat id_rsa.pub)" >> $GITHUB_ENV

    - name: terraform init
      run: terraform -chdir=infra init

    - name: terraform apply
      run: terraform -chdir=infra apply -auto-approve

    - name: get tf outputs
      run: terraform -chdir=infra output

  ansible:
    needs: terraform
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: setup ssh key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519

    - name: install ansible
      run: |
        sudo apt-get update -y
        sudo apt-get install -y ansible

    - name: run playbook
      run: |
        ansible-playbook -i "${{ needs.terraform.outputs.public_ip }}," \
        config/ansible/site.yaml \
        -u azureuser \
        --private-key ~/.ssh/id_ed25519 \
        -e "ansible_ssh_common_args='-o StrictHostKeyChecking=no'"
