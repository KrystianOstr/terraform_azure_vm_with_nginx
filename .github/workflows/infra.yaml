name: Infra with Terraform + Ansible

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - "infra/**"
      - "config/**"

concurrency:
  group: infra
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest

    outputs:
      public_ip: ${{ steps.tf_output.outputs.public_ip }}

    env:
      TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      TF_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      TF_VAR_client_id: ${{ secrets.AZURE_CLIENT_ID }}
      TF_VAR_ssh_pub_key: ${{ secrets.SSH_PUBLIC_KEY }}

    steps:
      - uses: actions/checkout@v4

      - name: azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: setup terraform
        uses: hashicorp/setup-terraform@v3

      - name: terraform init
        run: terraform -chdir=infra init

      - name: terraform plan
        run: terraform -chdir=infra plan -input=false

      - name: terraform apply
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: terraform -chdir=infra apply -auto-approve

      - name: export public ip
        if: ${{ github.event_name == 'workflow_dispatch' }}
        id: tf_output
        run: |
          ip=$(terraform -chdir=infra output -raw public_ip)
          echo "public_ip=$ip" >> $GITHUB_OUTPUT

  ansible:
    needs: terraform
    if: ${{ github.event_name == 'workflow_dispatch' }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: setup ssh key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

      - name: install ansible
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ansible

      - name: run playbook
        run: |
          ansible-playbook -i "${{ needs.terraform.outputs.public_ip }}," \
          config/ansible/site.yaml \
          -u azureuser \
          --private-key ~/.ssh/id_ed25519 \
          -e "ansible_ssh_common_args='-o StrictHostKeyChecking=no'"
